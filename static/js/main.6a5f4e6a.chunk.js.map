{"version":3,"sources":["components/Task 4/transaction.module.scss","components/Task 2/statistics.module.scss","components/Task 3/friendList.module.scss","components/Task 1/profile.jsx","components/Task 2/Statistics.jsx","components/Task 3/FriendList.jsx","components/Task 4/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","gen","Math","random","toString","substring","console","log","Statistics","title","statistic","statistics","statList","map","id","label","percentage","item","friendList","FriendList","friends","isOnline","colorsStat","statu","status","width","TransactionHistory","items","transaction","transactionHistory","tableThead","th","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a5f4e6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transaction_transactionHistory__2NItJ\",\"tableThead\":\"transaction_tableThead__bAah2\",\"th\":\"transaction_th__1eOxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__jar7K\",\"title\":\"statistics_title__1cZQe\",\"statList\":\"statistics_statList__eCsJw\",\"item\":\"statistics_item__8XMS3\",\"label\":\"statistics_label__2xU3K\",\"percentage\":\"statistics_percentage__3hFYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"friendList_status__1K4F_\",\"statu\":\"friendList_statu__3sh3r\",\"avatar\":\"friendList_avatar__26kl0\",\"item\":\"friendList_item__2obrH\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './_profile.scss';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className=\"profile\">\r\n    <div className=\"description\">\r\n      <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className=\"stats\">\r\n      <li className=\"stats-items\">\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li className=\"stats-items\">\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li className=\"stats-items\">\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport statistic from './statistics.module.scss';\r\n\r\nconst gen = '#' + Math.random().toString(16).substring(4);\r\nconsole.log(gen);\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={statistic.statistics}>\r\n    <h2 className={statistic.title}>{title}</h2>\r\n    <ul className={statistic.statList}>\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li className={statistic.item} key={id}>\r\n          <span className={statistic.label}>{label}</span>\r\n          <span className={statistic.percentage}>{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport friendList from './friendList.module.scss';\r\n\r\nconsole.log(friendList);\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map(({ id, name, isOnline, avatar }) => {\r\n      const colorsStat = isOnline ? friendList.statu : friendList.status;\r\n      return (\r\n        <li className={friendList.item} key={id}>\r\n          <span className={colorsStat}></span>\r\n          <img\r\n            className={friendList.avatar}\r\n            src={avatar}\r\n            alt=\"User avatar\"\r\n            width=\"48\"\r\n          />\r\n          <p className=\"name\">{name}</p>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.boolean,\r\n      avatar: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport transaction from './transaction.module.scss';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={transaction.transactionHistory}>\r\n      <thead className={transaction.tableThead}>\r\n        <tr>\r\n          <th className={transaction.th}>Type</th>\r\n          <th className={transaction.th}>Amount</th>\r\n          <th className={transaction.th}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td className={transaction.th}>{type}</td>\r\n            <td className={transaction.th}>{amount}</td>\r\n            <td className={transaction.th}>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\nimport user from './user.json';\nimport Profile from './components/Task 1/profile';\nimport Statistics from './components/Task 2/Statistics';\nimport statisticalData from './statistical-data.json';\nimport FriendList from './components/Task 3/FriendList';\nimport friends from './friends.json';\nimport TransactionHistory from './components/Task 4/TransactionHistory';\nimport transactions from './transactions.json';\nimport './globall.scss';\n\n//const gen = '#' + Math.random().toString(16).substring(4);\n\nconst App = () => {\n  return (\n    <div className=\"global\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}